/* ----------------------------------------------------- */
/* ********************* VARIABLES ********************* */
/* ----------------------------------------------------- */

/*==============================
=            COLORS            =
==============================*/

/*----------  PRIMARY  ----------*/
$colorPrimary_1: #FF7A00;

/*----------  SECONDARY  ----------*/
$colorSecondary_1: #002762;

/*----------  GREYSCALE (WHITE THEME)  ----------*/
$colorGreyscale_1: #101010;
$colorGreyscale_2: #2F2D2D;
$colorGreyscale_3: #888c8f;
$colorGreyscale_4: #EAEAEA;
$colorGreyscale_5: #FAFAFA;

/*----------  GREYSCALE (BLACK THEME)  ----------*/

/*----------  SYSTEM PALETTE  ----------*/
$colorError: #FF5555;
$colorValidation: #22af5c;

/*=====  End of COLORS  ======*/

/*=============================
=            FONTS            =
=============================*/

@font-face {
  font-family: DMSans-Bold;
  src: url(../../../assets/fonts/dmsans/DMSans-Bold.ttf);
}

@font-face {
  font-family: Inter-Bold;
  src: url(../../../assets/fonts/Inter/Inter-Bold.ttf);
}

@font-face {
  font-family: Inter-Regular;
  src: url(../../../assets/fonts/Inter/Inter-Regular.ttf);
}

$font_1_bold: DMSans-Bold;

$font_2_regular: Inter-Regular;
$font_2_bold: Inter-Bold;

/*=====  End of FONTS  ======*/

/*=================================
=            TEXT SIZE            =
=================================*/
/*----------  H1  ----------*/
$h1_textsize_desktop: 64px;
$h1_textsize_mobile: 40px;

/*----------  H2  ----------*/
$h2_textsize_desktop: 48px;
$h2_textsize_mobile: 32px;

/*----------  H3  ----------*/
$h3_textsize_desktop: 40px;
$h3_textsize_mobile: 28px;

/*----------  H4  ----------*/
$h4_textsize_desktop: 24px;
$h4_textsize_mobile: 24px;

/*----------  H5  ----------*/
$h5_textsize_desktop: 18px;
$h5_textsize_mobile: 18px;

/*----------  PARAGRAPH BIG  ----------*/
$paragraphBig_textsize_desktop: 18px;

/*----------  PARAGRAPH MEDIUM  ----------*/
$paragraphMedium_textsize_desktop: 16px;

/*----------  PARAGRAPH SMALL  ----------*/
$paragraphSmall_textsize_desktop: 14px;

/*----------  PARAGRAPH TINY  ----------*/
$paragraphTiny_textsize_desktop: 12px;

/*----------  LINK  ----------*/
$linkBig_textsize_desktop: 18px;
$linkMedium_textsize_desktop: 16px;
$linkSmall_textsize_desktop: 14px;
$linkTiny_textsize_desktop: 12px;

/*=====  End of TEXT SIZE  ======*/

/*=======================================
=            GRID RESPONSIVE            =
=======================================*/

$grid_tablet: calc(100% - 100px);
$grid_mobile: calc(100% - 50px);

/*===========  End of GRID  ===========*/

/*===================================
=            BREAK POINT            =
===================================*/

$breakPoint_tablet: 1228px;
$breakPoint_mobile: 700px;

@media ($breakPoint_mobile <= width <= $breakPoint_tablet) and (orientation: portrait) {
}

@media ($breakPoint_mobile <= width <= $breakPoint_tablet) and (orientation: landscape) {
}

@media ($breakPoint_mobile <= width <= $breakPoint_tablet) {
}

@media (width <= $breakPoint_mobile) {
}

/*=====  End of BREAK POINT  ======*/

/* --------------------------------------------------------- */
/* ********************* END VARIABLES ********************* */
/* --------------------------------------------------------- */

/* ------------------------------------------------- */
/* ********************* MIXIN ********************* */
/* ------------------------------------------------- */

/*----------  HEADING  ----------*/
@mixin styleH($hx, $color: $colorGreyscale_1, $font: $font_1_bold) {
  @if $hx== 'h1' {
    @media screen and (min-width: $breakPoint_mobile) {
      font-size: $h1_textsize_desktop;
      $lineHeight: $h1_textsize_desktop * 1.2;
      line-height: $lineHeight;
    }

    @media screen and (max-width: $breakPoint_mobile) {
      font-size: $h1_textsize_mobile;
      $lineHeight: $h1_textsize_mobile * 1.2;
      line-height: $lineHeight;
    }
  } @else if $hx == 'h2' {
    @media screen and (min-width: $breakPoint_mobile) {
      font-size: $h2_textsize_desktop;
      $lineHeight: $h2_textsize_desktop * 1.2;
      line-height: $lineHeight;
    }

    @media screen and (max-width: $breakPoint_mobile) {
      font-size: $h2_textsize_mobile;
      $lineHeight: $h2_textsize_mobile * 1.2;
      line-height: $lineHeight;
    }
  } @else if $hx == 'h3' {
    @media screen and (min-width: $breakPoint_mobile) {
      font-size: $h3_textsize_desktop;
      $lineHeight: $h3_textsize_desktop * 1.2;
      line-height: $lineHeight;
    }

    @media screen and (max-width: $breakPoint_mobile) {
      font-size: $h3_textsize_mobile;
      $lineHeight: $h3_textsize_mobile * 1.2;
      line-height: $lineHeight;
    }
  } @else if $hx == 'h4' {
    @media screen and (min-width: $breakPoint_mobile) {
      font-size: $h4_textsize_desktop;
      $lineHeight: $h4_textsize_desktop * 1.2;
      line-height: $lineHeight;
    }

    @media screen and (max-width: $breakPoint_mobile) {
      font-size: $h4_textsize_mobile;
      $lineHeight: $h4_textsize_mobile * 1.2;
      line-height: $lineHeight;
    }
  } @else if $hx == 'h5' {
    @media screen and (min-width: $breakPoint_mobile) {
      font-size: $h5_textsize_desktop;
      $lineHeight: $h5_textsize_desktop * 1.2;
      line-height: $lineHeight;
    }

    @media screen and (max-width: $breakPoint_mobile) {
      font-size: $h5_textsize_mobile;
      $lineHeight: $h5_textsize_mobile * 1.2;
      line-height: $lineHeight;
    }
  }

  color: $color;
  font-family: $font, sans-serif;
}

/*----------  PARAGRAPH  ----------*/
@mixin styleP($px, $color: $colorGreyscale_1, $font: $font_2_regular) {
  @if $px == 'big' {
    font-size: $paragraphBig_textsize_desktop;
    $lineHeight: $paragraphBig_textsize_desktop * 1.5;
    line-height: $lineHeight;
  } @else if $px == 'medium' {
    font-size: $paragraphMedium_textsize_desktop;
    $lineHeight: $paragraphMedium_textsize_desktop * 1.3;
    line-height: $lineHeight;
  } @else if $px == 'small' {
    font-size: $paragraphSmall_textsize_desktop;
    $lineHeight: $paragraphSmall_textsize_desktop * 1.3;
    line-height: $lineHeight;
  } @else if $px == 'tiny' {
    font-size: $paragraphTiny_textsize_desktop;
    $lineHeight: $paragraphTiny_textsize_desktop * 1.3;
    line-height: $lineHeight;
  }

  color: $color;
  font-family: $font;
}

/*----------  LINK  ----------*/
@mixin styleA($ax: 'big', $style: '1', $color: $colorPrimary_1) {
  display: inline-flex;
  position: relative;
  align-items: center;
  text-decoration: none;
  font-family: $font_2_bold, sans-serif;

  @if $style == '2' {
    &::after{
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 2px;
      background-color: $color;
      transform: scaleX(0);
      transform-origin: 0 0;
      transition: transform 0.3s ease-in-out;
    }
  
    &:hover{
      &::after{
          transform: scaleX(1);
      }
    }
  }



  @if $ax == 'big' {
    font-size: $linkBig_textsize_desktop;
    $lineHeight: $linkBig_textsize_desktop * 1.3;
    line-height: $lineHeight;
  } @else if $ax == 'medium' {
    font-size: $linkMedium_textsize_desktop;
    $lineHeight: $linkMedium_textsize_desktop * 1.3;
    line-height: $lineHeight;
  } @else if $ax == 'small' {
    font-size: $linkSmall_textsize_desktop;
    $lineHeight: $linkSmall_textsize_desktop * 1.3;
    line-height: $lineHeight;
  } @else if $ax == 'tiny' {
    font-size: $linkTiny_textsize_desktop;
    $lineHeight: $linkSmall_textsize_desktop * 1.3;
    line-height: $lineHeight;
  }

  color: $color;
}

/*----------  BUTTON  ----------*/
@mixin styleButton($size: 'medium', $style: '1') {
  text-decoration: none;
  border: none;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 12px;
  cursor: pointer;
  transition: background-color 0.25s ease, border-color 0.25s ease;
  // border: 1px solid $colorGreyscale_1;
  padding: 0px 24px;

  .btn_text {
    transition: color 0.25s ease;
  }
  .btn_icon {
    width: 16px;
    height: 15px;
    transition: transform 0.25s ease;
  }
  @if $size == 'big' {
    height: 50px;
    border-radius: 25px;
  } @else if $size == 'medium' {
    height: 40px;
    border-radius: 20px;
  }
  @if $style == '1' {
    background-color: $colorPrimary_1;
    border: 1px solid transparent;

    .btn_text {
      @include styleA($ax: 'medium', $color: $colorGreyscale_5);
    }
    .btn_icon {
      #content {
        fill: $colorGreyscale_5;
      }
    }

    &:hover {
      background: unset;
      border: 1px solid $colorPrimary_1;
      .btn_text {
        @include styleA($ax: 'medium', $color: $colorGreyscale_1);
      }
      .btn_icon {
        transform: translateX(4px);
        #content {
            fill: $colorGreyscale_1;
        }
      }
    }
  } @else if $style == '2' {
    background-color: $colorSecondary_1;
    border: 1px solid transparent;

    .btn_text {
      @include styleA($ax: 'medium', $color: $colorGreyscale_5);
    }
    .btn_icon {
      #content {
        fill: $colorGreyscale_5;
      }
    }

    &:hover {
        background: unset;
        border: 1px solid $colorSecondary_1;
      .btn_text {
        @include styleA($ax: 'medium', $color: $colorGreyscale_1);
      }
      .btn_icon {
        transform: translateX(4px);
        #content {
            fill: $colorGreyscale_1;
        }
      }
    }
  }
}

/*----------  GRID  ----------*/

$grid_width: 84px; // COL WIDTH
$grid_gap: 20px; // GUTTER WIDTH
$grid_col: 12;

@mixin styleGrid($mode, $numCol: 12, $addGap: 0, $direction: 'both') {
  $gap: calc(#{$addGap} * #{$grid_gap});
  $grid_gap: calc(#{$grid_gap} * 11 / 12);
  $value: calc(
    (
        (#{$grid_width} * #{$numCol}) +
          (
            (#{$grid_gap} * #{$grid_col} / (#{$grid_col} - 1)) *
              (#{$numCol} - 1)
          )
      ) + #{$gap}
  );

  @if $mode == 'wrapper' {
    margin-right: auto;
    margin-left: auto;

    @media screen and (min-width: $breakPoint_tablet) {
      width: $value;
    }

    @media screen and (min-width: $breakPoint_mobile) and (max-width: $breakPoint_tablet) {
      width: $grid_tablet;
    }

    @media screen and (max-width: $breakPoint_mobile) {
      width: $grid_mobile;
    }
  } @else if $mode == 'width' {
    width: $value;
  } @else if $mode == 'height' {
    height: $value;
  } @else if $mode == 'padding' {
    @if $direction == 'left' {
      padding-left: $value;
    } @else if $direction == 'right' {
      padding-right: $value;
    } @else if $direction == 'both' {
      padding-left: $value;
      padding-right: $value;
    }
  } @else if $mode == 'margin' {
    @if $direction == 'left' {
      margin-left: $value;
    } @else if $direction == 'right' {
      margin-right: $value;
    } @else if $direction == 'both' {
      margin-left: $value;
      margin-right: $value;
    }
  } @else if $mode == 'position' {
    @if $direction == 'left' {
      left: $golden_value;
    } @else if $direction == 'right' {
      right: $golden_value;
    }
  }
}

/* ----------------------------------------------------- */
/* ********************* END MIXIN ********************* */
/* ----------------------------------------------------- */
